@jumps = 3
@asteroid_min_size = 2
@asteroid_max_size = 4
@frozen_world_min_size = 9
@frozen_world_max_size = 20

# Initializer for custom origin
flooded_void_dweller_system = {
	class = "sc_a"
	flags = { empire_home_system }
	usage = origin
	asteroid_belt = {
		type = icy_asteroid_belt
		radius = 115
	}
	init_effect = {
		every_neighbor_system = { set_star_flag = empire_cluster }
		generate_home_system_resources = yes
		if = {
			limit = {
				is_inside_nebula = no
			}
			create_nebula = {
				radius = 25
			}
			set_star_flag = ocean_paradise_nebula
		}
	}

	# Star
	planet = {
		class = star
		orbit_distance = 0
		orbit_angle = 0
		size = 28
		has_ring = no
	}

	# Homeworld

	planet = {
		orbit_distance = 60
		orbit_angle = -45
		class = pc_toxic
		name = "Broken Paradise"
		orbit_angle = { min = 90 max = 270 }
		size = { min = 16 max = 20 }
		flags = { ignore_startup_effect has_megastructure }

		init_effect = {
			set_deposit = d_minerals_2
		}

		moon = { 
			class = pc_habitat
			orbit_angle = { min = 90 max = 270 }
			orbit_distance = 5
			size = 8
			modifiers = flooded_habitat
			starting_planet = yes 
			flags = {flooded_habitat_cap special_start_planet megastructure habitat mining_habitat  }
			deposit_blockers = none
		}
	}

	# Relic from ocean paradise origin
	planet = {
		class = pc_frozen
		orbit_angle = -17
		orbit_distance = 25
		size = @frozen_world_min_size
	}

	# Ice Asteroids
	change_orbit = 26
	planet = {
		count = 10
		class = pc_ice_asteroid
		orbit_distance = { min = 0 max = 1 }
		orbit_angle = { min = 10 max = 36 }
		size = { min = @asteroid_min_size max = @asteroid_max_size }
	}

	# Random Frozen Worlds
	planet = {
		count = 5
		class = pc_frozen
		orbit_distance = { min = 20 max = 60 }
		orbit_angle = { min = 0 max = 360 }
		size = { min = @frozen_world_min_size max = @frozen_world_max_size }
	}

	# Guaranteed habitables - turned into Frozen Worlds in aquatics.1001
	neighbor_system = {
		trigger = { num_guaranteed_colonies >= 2 }
		hyperlane_jumps = { min = 1 max = @jumps }
		initializer = "neighbor_t1"
	}
	neighbor_system = {
		trigger = { num_guaranteed_colonies >= 1 }
		hyperlane_jumps = { min = 1 max = @jumps }
		initializer = "neighbor_t1_first_colony"
	}
}

